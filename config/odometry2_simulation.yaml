odometry2:
  odometry_loop_rate: 100.0 # [Hz]

# px4 # #{
  px4:
    EKF2_AID_MASK: 329 # default mask - will be changed according to hector and gps reliability
    EKF2_EV_DELAY: 10.0 # hector measurements delay # 100~150
    EKF2_EV_NOISE_MD: 1 # use px4 covariances
    EKF2_EVP_NOISE: 0.05 # position measurement covariance [m]
    EKF2_EVV_NOISE: 0.05 # velocity measurement covariance [ms-1]

    EKF2_RNG_AID: 0 # Using the range sensor to estimate height if specific conditions are met
    EKF2_RNG_A_HMAX: 5.0 # Max height to use ranger for fusion in aid mode

    EKF2_HGT_MODE: 3 # Default source of height estimation - will be changed according to hector and gps reliability 3 - vision height mode,  0 - barometer pressure

    MPC_XY_CRUISE: 1.0 # Max speed for mission mode [ms-1]
    MC_YAWRATE_MAX: 20.0 # Max yaw rate [degs-1]
    MPC_ACC_HOR: 0.5 # Acceleration for horizontal movement [ms-2] 3.0
    MPC_ACC_HOR_MAX: 0.5 # Max acceleration for horizontal movement [ms-2] 3.0
    MPC_JERK_AUTO: 3.0 # Change of the acceleration [ms-3]
    MPC_JERK_MAX: 3.0 # Max change of the acceleration [ms-3]
    MPC_ACC_DOWN_MAX: 1.0 #0.5 # Max acceleration for vertical move down [ms-2] 3.0
    MPC_ACC_UP_MAX: 1.0 #0.5 # Max acceleration for vertical move up [ms-2] 4.0

# # #}

# gps # #{ 
  gps:
    use_gps: true
    num_init_msgs: 5 # number of messages to skip before using gps
    eph_max: 2.0 # max deviation allowed to use gps source [m]
    msg_good: 5 # number of messages to confirm good gps
    msg_err: 5 # number of messages to confirm bad gps
# # #}

# hector # #{
  hector:
    use_hector: true
    num_init_msgs: 10 # number of messages to skip before using hector messages
    msg_interval_warn: 0.5 # interval between messages that gives warning [s]
    msg_interval_max: 0.8 # max interval between messages before not reliable hector [s]
    max_velocity: 2.0 # max velocity of the hector estimator to believe hector [ms-1]
    max_position_jump: 1.0 # max position difference between consequent hector poses. 4 is default [m]
    reset_wait: 5.0 # wait for availability of next hector reset [s]
    fusion_wait: 3.0 # wait for fusion of the hector data after each reset  [s]
# # #}

# altitude estimation # #{
  altitude:

    num_init_msgs: 50 # number of skipped messages from garmin
    avg_offset_msgs: 10 # number of messages to average garmin offset measurement
    garmin_msg_delay: 0 # number of msgs to postpone garmin measurements 400ms = 40mgs * 10ms. 10 ms is publish rate of garmin msgs 100 ms is garmin delay base

    median_filter:
      garmin:
        buffer_size: 100.0
        max_diff: 2.0

    gate: # values outside of this range are not fused [meters]
      garmin:
        min: 0.05
        max: 20.0

    excessive_tilt: 0.785398 # corrections from range sensors will not be fused if UAV is tilted more than this value [radians] (TODO: not used now)

    measurement_covariance: # the covariance used when this measurement is used as correction in Kalman filter
      garmin: 10.0
      baro: 100.0

    process_covariance: # the process covariance used in the prediction step of the Kalman filter
      pos: 100.0
      vel: 10000.0
      acc: 10000.0
# # #}

# heading estimation# #{
  heading:

    measurement_covariance: # the covariance used when this measurement is used as correction in Kalman filter
      hector: 0.01
      gyro: 0.1

    process_covariance: # the process covariance used in the prediction step of the Kalman filter
      pos: 0.1
      vel: 0.1
      acc: 0.001


# # #}

# lateral estimation # #{
  lateral:

    measurement_covariance: # the covariance used when this measurement is used as correction in Kalman filter
      hector: 0.001

    process_covariance: # the process covariance used in the prediction step of the Kalman filter
      pos: 1.0 # 0.01 
      vel: 10.0 # 0.1
      acc: 100.0 # 1.0
# # #}
